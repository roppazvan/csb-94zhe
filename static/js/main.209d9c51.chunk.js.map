{"version":3,"sources":["features/user/auth.js","features/user/userSlice.js","store.js","routes/Login.js","routes/Register.js","routes/utils/isUserLogged.js","routes/Home.js","routes/utils/PrivateRoute.js","App.js","index.js"],"names":["loginUser","createAsyncThunk","thunkAPI","a","email","password","fetch","method","headers","Accept","body","JSON","stringify","response","json","data","status","localStorage","setItem","token","rejectWithValue","console","log","signupUser","name","username","getLoggedUserInformation","initialState","isFetching","isSuccess","isError","errorMessage","userSlice","createSlice","reducers","clearErrors","state","logoutSuccess","extraReducers","fulfilled","payload","rejected","message","pending","actions","userSelector","user","configureStore","reducer","dispatch","useDispatch","useSelector","history","useHistory","useState","setEmail","setPassword","useEffect","push","style","color","type","onChange","ev","target","value","onClick","setName","userState","htmlFor","getItem","isUserLogged","removeItem","Component","component","rest","render","props","to","App","PrivateRoute","exact","path","Home","Login","Register","rootElement","document","getElementById","ReactDOM","store"],"mappings":"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","file":"static/js/main.209d9c51.chunk.js","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const loginUser = createAsyncThunk(\n  \"users/login\",\n  async ({ email, password }, thunkAPI) => {\n    try {\n      const response = await fetch(\n        \"https://mock-user-auth-server.herokuapp.com/api/v1/auth\",\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        }\n      );\n      let data = await response.json();\n\n      if (response.status === 200) {\n        localStorage.setItem(\"token\", data.token);\n        return data;\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      console.log(\"Error\", e.response.data);\n      thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nexport const signupUser = createAsyncThunk(\n  \"users/signupUser\",\n  async ({ name, email, password }, thunkAPI) => {\n    try {\n      const response = await fetch(\n        \"https://mock-user-auth-server.herokuapp.com/api/v1/users\",\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password\n          })\n        }\n      );\n      let data = await response.json();\n      // console.log(\"data\", data);\n      if (response.status === 200) {\n        localStorage.setItem(\"token\", data.token);\n        // console.log({ ...data, username: name, email });\n        return { username: name, email };\n      } else {\n        console.log(\"Error\", data);\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      console.log(\"Error\", e.response.data);\n      return thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n\nexport const getLoggedUserInformation = createAsyncThunk(\n  \"users/getLoggedUserInformation\",\n  async (token, thunkAPI) => {\n    try {\n      console.log(\"get Logged user info\", token);\n      const response = { status: 200 };\n      const username = \"Razvanel\";\n      const email = `Email user logat cu ${token}`;\n\n      if (response.status === 200) {\n        return { username, email };\n      } else {\n        // console.log(\"Error\", data);\n        // return thunkAPI.rejectWithValue(data);\n      }\n    } catch (e) {\n      // console.log(\"Error\", e.response.data);\n      // return thunkAPI.rejectWithValue(e.response.data);\n    }\n  }\n);\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getLoggedUserInformation, loginUser, signupUser } from \"./auth\";\n\nconst initialState = {\n  username: \"\",\n  email: \"\",\n  isFetching: false,\n  isSuccess: false,\n  isError: false,\n  errorMessage: \"\"\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    clearErrors: (state) => {\n      state.isError = false;\n      state.errorMessage = \"\";\n      return state;\n    },\n    logoutSuccess: () => {\n      console.log(\"Logout Success\");\n      return initialState;\n    }\n  },\n  extraReducers: {\n    [loginUser.fulfilled]: (state, { payload }) => {\n      state.email = payload.email;\n      state.username = payload.name;\n      state.isFetching = false;\n      state.isSuccess = true;\n      return state;\n    },\n    [loginUser.rejected]: (state, { payload }) => {\n      console.log(\"payload\", payload);\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    },\n    [loginUser.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [signupUser.fulfilled]: (state, { payload }) => {\n      state.email = payload.email;\n      state.username = payload.username;\n      state.isFetching = false;\n      state.isSuccess = true;\n      return state;\n    },\n    [signupUser.rejected]: (state, { payload }) => {\n      console.log(\"REJECTED\");\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    },\n    [signupUser.pending]: (state) => {\n      console.log(\"PENDING\");\n      state.isFetching = true;\n    },\n    [getLoggedUserInformation.fulfilled]: (state, { payload }) => {\n      state.email = payload.email;\n      state.username = payload.username;\n      return state;\n    }\n  }\n});\n\nexport const { clearErrors, logoutSuccess } = userSlice.actions;\n\nexport const userSelector = (state) => state.user;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { userSlice } from \"./features/user/userSlice\";\n\nexport default configureStore({\n  reducer: {\n    user: userSlice.reducer\n  }\n});\n","import { userSelector, clearErrors } from \"../features/user/userSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { loginUser } from \"../features/user/auth\";\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { isFetching, errorMessage, isError, isSuccess } = useSelector(\n    userSelector\n  );\n\n  let history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    if (isSuccess) {\n      history.push(\"/\");\n    }\n  }, [isSuccess, history]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearErrors());\n    };\n  }, [dispatch]);\n\n  if (isFetching) {\n    return <h1>Fetching user</h1>;\n  }\n\n  return (\n    <div>\n      <h1>Login page</h1>\n      {isError && errorMessage ? (\n        <div style={{ color: \"red\" }}>{errorMessage}</div>\n      ) : null}\n      <input\n        type={\"email\"}\n        onChange={(ev) => {\n          setEmail(ev.target.value);\n        }}\n      ></input>\n      <input\n        type={\"password\"}\n        onChange={(ev) => {\n          setPassword(ev.target.value);\n        }}\n      ></input>\n      <button\n        onClick={() => {\n          dispatch(loginUser({ email, password }));\n        }}\n      >\n        {\"Login now\"}\n      </button>\n      <div>\n        <span>Dont have an account ?</span>\n        <button\n          onClick={() => {\n            history.push(\"/register\");\n          }}\n        >\n          Register here\n        </button>\n      </div>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { signupUser } from \"../features/user/auth\";\nimport { userSelector, clearErrors } from \"../features/user/userSlice\";\n\nexport default () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const userState = useSelector(userSelector);\n  const { isFetching, errorMessage, isError, isSuccess } = userState;\n  console.log(userState);\n\n  useEffect(() => {\n    if (isSuccess) {\n      history.push(\"/\");\n    }\n  }, [isSuccess, history]);\n\n  if (isFetching) {\n    return <h1>Creating account</h1>;\n  }\n\n  return (\n    <div>\n      <h1>Create an account</h1>\n      <div>\n        {isError ? <div style={{ color: \"red\" }}>{errorMessage}</div> : null}\n        <input\n          name=\"name\"\n          type=\"text\"\n          onChange={(ev) => {\n            setName(ev.target.value);\n          }}\n        ></input>\n        <label htmlFor=\"name\">Name</label>\n      </div>\n      <div>\n        <input\n          name=\"email\"\n          type=\"email\"\n          onChange={(ev) => {\n            setEmail(ev.target.value);\n          }}\n        ></input>\n        <label htmlFor=\"email\">Email</label>\n      </div>\n      <div>\n        <input\n          type={\"password\"}\n          onChange={(ev) => {\n            setPassword(ev.target.value);\n          }}\n        ></input>\n        <label htmlFor=\"password\">Password</label>\n      </div>\n      <button\n        onClick={() => {\n          dispatch(signupUser({ name, email, password }));\n        }}\n      >\n        {\"Register now\"}\n      </button>\n      <div>\n        <span>Already have an account ?</span>\n        <button\n          onClick={() => {\n            history.push(\"/login\");\n          }}\n        >\n          Login here\n        </button>\n      </div>\n    </div>\n  );\n};\n","export default () => !!localStorage.getItem(\"token\");\n","import { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { logoutSuccess, userSelector } from \"../features/user/userSlice\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport isUserLogged from \"./utils/isUserLogged\";\nimport { getLoggedUserInformation } from \"../features/user/auth\";\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { email, username } = useSelector(userSelector);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!isUserLogged()) {\n      history.push(\"/login\");\n    }\n  });\n\n  useEffect(() => {\n    if (!email) {\n      console.log(\"should get user info\");\n      const token = localStorage.getItem(\"token\");\n      dispatch(getLoggedUserInformation(token));\n    }\n  }, [dispatch, email]);\n\n  const onLogout = () => {\n    localStorage.removeItem(\"token\");\n    dispatch(logoutSuccess());\n    history.push(\"/login\");\n  };\n\n  return (\n    <div>\n      <h1>\n        Dashboard for {email} {username}{\" \"}\n      </h1>\n      <button onClick={onLogout}>Log out</button>\n    </div>\n  );\n};\n","import { Redirect, Route } from \"react-router-dom\";\nimport isUserLogged from \"./isUserLogged\";\n\nexport default ({ component: Component, ...rest }) => {\n  if (!isUserLogged()) {\n    return <Redirect to={\"/login\"} />;\n  }\n  return (\n    <Route {...rest} render={(props) => <Component {...props} {...rest} />} />\n  );\n};\n","import \"./styles.css\";\nimport Login from \"./routes/Login\";\nimport Register from \"./routes/Register\";\nimport Home from \"./routes/Home\";\nimport PrivateRoute from \"./routes/utils/PrivateRoute\";\nimport { Route, Switch } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <Switch>\n      <PrivateRoute exact path=\"/\" component={Home} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n    </Switch>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <StrictMode>\n      <Router>\n        <App />\n      </Router>\n    </StrictMode>\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}